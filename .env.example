# Environment Configuration for Auto Report Scheduler

# =================
# GEMINI API KEY
# =================
# Required: API key for Gemini 2.5 Pro model
# Get your key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# =================
# AUTO REPORT SCHEDULER SETTINGS
# =================
# Enable/disable the auto report scheduler
# Set to 'true' to enable automatic report generation
ENABLE_AUTO_REPORT_SCHEDULER=false

# Interval between automatic report generations (in hours)
# Default: 3 hours
AUTO_REPORT_INTERVAL_HOURS=3

# Secret key for accessing auto-update-system page
# Generate a random string for security (e.g., a1b2c3d4e5f6)
AUTO_UPDATE_SECRET_KEY=your_secret_key_here

# =================
# DATABASE SETTINGS
# =================
# PostgreSQL URL for production (Vercel Postgres)
# POSTGRES_URL=your_postgres_connection_string_here

# Redis URL for caching (optional)
# REDIS_URL=your_redis_connection_string_here

# =================
# OTHER SETTINGS
# =================
# Flask secret key for session management
SECRET_KEY=your_secret_key_here

# Flask environment (development/production)
FLASK_ENV=development

# =================
# API CONFIGURATION
# =================
# Max retry attempts for report generation
MAX_REPORT_ATTEMPTS=3

# Enable fallback mode when encountering 500 errors
USE_FALLBACK_ON_500=true

# AI thinking budget (valid range: 128-32768)
THINKING_BUDGET=32768

# =================
# API KEYS
# =================
# TAAPI.IO secret key for technical indicators (optional)
# Get your key from: https://taapi.io/
TAAPI_SECRET=your_taapi_secret_key_here

# CoinGecko API key for enhanced rate limits (optional)
# Get your key from: https://coingecko.com/en/api/pricing
COINGECKO_API_KEY=your_coingecko_api_key_here
#TAAPI_SECRET_KEY="your_taapi_secret_key_here"
# =================
# SETUP INSTRUCTIONS
# =================
# 1. Copy this file to .env in your project root: cp .env.example .env
# 2. Replace all placeholder values (your_*_here) with your actual configuration
# 3. Set ENABLE_AUTO_REPORT_SCHEDULER=true to enable automatic reports
# 4. Make sure GEMINI_API_KEY is set for the scheduler to work
# 5. Set AUTO_UPDATE_SECRET_KEY to a strong random string for security
# 6. Restart your application for changes to take effect

# =================
# SECURITY NOTES
# =================
# - Never commit your .env file to version control
# - The .env file is already in .gitignore for security
# - Auto update system page requires secret key in URL: /auto-update-system-<YOUR_SECRET_KEY>
# - Generate strong random keys (e.g., uuid4, random alphanumeric strings)
# - Keep all secrets confidential and rotate them periodically

# =================
# SCHEDULER BEHAVIOR
# =================
# - The scheduler runs as a background thread when ENABLE_AUTO_REPORT_SCHEDULER=true
# - It generates reports every AUTO_REPORT_INTERVAL_HOURS hours
# - Reports are automatically saved to the database
# - Manual report generation is always available via the web interface
# - Uses advanced retry logic and fallback mode for reliability

# =================
# API KEYS REQUIRED
# =================
# Essential:
# - GEMINI_API_KEY: Required for AI report generation
# 
# Optional (for enhanced dashboard features):
# - TAAPI_SECRET: For technical indicators (RSI)
# - COINGECKO_API_KEY: For enhanced rate limits
#
# Note: Dashboard works without optional API keys but with limited functionality

# =================
# SETUP INSTRUCTIONS
# =================
# 1. Copy this file to .env in your project root
# 2. Replace the placeholder values with your actual configuration
# 3. Set ENABLE_AUTO_REPORT_SCHEDULER=true to enable automatic reports
# 4. Make sure GEMINI_API_KEY is set for the scheduler to work
# 5. Set AUTO_UPDATE_SECRET_KEY to a random string for security
# 6. Restart your application for changes to take effect

# =================
# SCHEDULER BEHAVIOR
# =================
# - The scheduler runs as a background thread
# - It generates reports every AUTO_REPORT_INTERVAL_HOURS hours
# - Reports are automatically saved to the database
# - The scheduler only runs if ENABLE_AUTO_REPORT_SCHEDULER=true
# - Manual report generation is always available via the web interface

# =================
# SECURITY
# =================
# - Auto update system page requires secret key in URL
# - Access format: /auto-update-system-<YOUR_SECRET_KEY>
# - Generate a strong random key (e.g., uuid4, random alphanumeric)
# - Keep the secret key confidential and change it periodically
