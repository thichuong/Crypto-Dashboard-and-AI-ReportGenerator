version: '3.8'

services:
  web:
    build: .
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - POSTGRES_URL=postgresql://crypto_user:${POSTGRES_PASSWORD}@postgres:5432/crypto_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
      - TAAPI_SECRET=${TAAPI_SECRET}
      - ENABLE_AUTO_REPORT_SCHEDULER=true
      - AUTO_UPDATE_SECRET_KEY=${AUTO_UPDATE_SECRET_KEY}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - app_data:/app/instance

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=crypto_db
      - POSTGRES_USER=crypto_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  app_data:
