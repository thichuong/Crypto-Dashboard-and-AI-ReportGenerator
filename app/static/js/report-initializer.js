/**
 * report-initializer.js
 * 
 * File chuy√™n d·ª•ng ƒë·ªÉ kh·ªüi t·∫°o c√°c visualization trong b√°o c√°o.
 * ƒê∆∞·ª£c s·ª≠ d·ª•ng ri√™ng cho trang PDF template v√† c√°c trang b√°o c√°o kh√°c.
 */

/**
 * Kh·ªüi t·∫°o t·∫•t c·∫£ c√°c visualization cho b√°o c√°o
 * ƒê·∫£m b·∫£o g·ªçi h√†m n√†y sau khi DOM v√† c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt ƒë√£ ƒë∆∞·ª£c t·∫£i
 */
function initializeReportVisuals() {
    console.log("üé® B·∫Øt ƒë·∫ßu kh·ªüi t·∫°o report visuals...");
    
    // Ki·ªÉm tra xem c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt ƒë√£ ƒë∆∞·ª£c t·∫£i ch∆∞a
    if (typeof createGauge !== 'function' || 
        typeof createDoughnutChart !== 'function' || 
        typeof createBarChart !== 'function') {
        console.warn("‚ö†Ô∏è Th∆∞ vi·ªán charting ch∆∞a ƒë∆∞·ª£c t·∫£i. ƒê·ª£i v√† th·ª≠ l·∫°i...");
        
        // Th·ª≠ l·∫°i sau 500ms
        setTimeout(initializeReportVisuals, 500);
        return;
    }
    
    // Ki·ªÉm tra xem h√†m initializeAllVisuals_report c√≥ t·ªìn t·∫°i kh√¥ng
    if (typeof initializeAllVisuals_report !== 'function') {
        console.warn("‚ö†Ô∏è H√†m initializeAllVisuals_report ch∆∞a ƒë∆∞·ª£c t·∫£i. ƒê·ª£i v√† th·ª≠ l·∫°i...");
        
        // Th·ª≠ l·∫°i sau 500ms
        setTimeout(initializeReportVisuals, 500);
        return;
    }
    
    try {
        // G·ªçi h√†m kh·ªüi t·∫°o t·ª´ report.js
        initializeAllVisuals_report();
        console.log("‚úÖ ƒê√£ kh·ªüi t·∫°o th√†nh c√¥ng t·∫•t c·∫£ report visuals");
    } catch (error) {
        console.error("‚ùå L·ªói khi kh·ªüi t·∫°o report visuals:", error);
    }
}

/**
 * Kh·ªüi t·∫°o v·ªõi retry mechanism
 * ƒê·∫£m b·∫£o c√°c visualization ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng
 */
function initializeReportVisualsWithRetry(maxRetries = 5, retryDelay = 1000) {
    let attempts = 0;
    
    function attempt() {
        attempts++;
        console.log(`üîÑ Th·ª≠ kh·ªüi t·∫°o report visuals (l·∫ßn ${attempts}/${maxRetries})`);
        
        // Ki·ªÉm tra c√°c ƒëi·ªÅu ki·ªán c·∫ßn thi·∫øt
        const hasChartLibrary = typeof createGauge === 'function' && 
                               typeof createDoughnutChart === 'function' && 
                               typeof createBarChart === 'function';
        
        const hasReportFunction = typeof initializeAllVisuals_report === 'function';
        
        if (hasChartLibrary && hasReportFunction) {
            try {
                initializeAllVisuals_report();
                console.log("‚úÖ Kh·ªüi t·∫°o report visuals th√†nh c√¥ng!");
                return true;
            } catch (error) {
                console.error("‚ùå L·ªói khi kh·ªüi t·∫°o:", error);
            }
        } else {
            console.log("‚è≥ Ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ kh·ªüi t·∫°o:", {
                hasChartLibrary,
                hasReportFunction
            });
        }
        
        // Th·ª≠ l·∫°i n·∫øu ch∆∞a ƒë·∫°t max retries
        if (attempts < maxRetries) {
            setTimeout(attempt, retryDelay);
        } else {
            console.warn("‚ö†Ô∏è ƒê√£ th·ª≠ t·ªëi ƒëa nh∆∞ng kh√¥ng th·ªÉ kh·ªüi t·∫°o report visuals");
        }
        
        return false;
    }
    
    attempt();
}

/**
 * Kh·ªüi t·∫°o khi DOM ready
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log("üìÑ DOM ƒë√£ s·∫µn s√†ng, chu·∫©n b·ªã kh·ªüi t·∫°o report visuals...");
    
    // ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ ƒë·∫£m b·∫£o t·∫•t c·∫£ script kh√°c ƒë√£ ƒë∆∞·ª£c t·∫£i
    setTimeout(() => {
        initializeReportVisualsWithRetry();
    }, 100);
});

/**
 * Kh·ªüi t·∫°o khi window load (backup)
 */
window.addEventListener('load', function() {
    console.log("üåê Window ƒë√£ load ho√†n to√†n");
    
    // Ch·ªâ th·ª≠ l·∫°i n·∫øu ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o
    if (typeof window.reportVisualsInitialized === 'undefined') {
        setTimeout(() => {
            initializeReportVisualsWithRetry(3, 500);
        }, 200);
    }
});

// Export functions for manual use
window.initializeReportVisuals = initializeReportVisuals;
window.initializeReportVisualsWithRetry = initializeReportVisualsWithRetry;
